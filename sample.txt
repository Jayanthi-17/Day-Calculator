<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Day Calculator with Calendar Picker</title>
</head>
<body>
  <div id="DayCalculatorContainer" style="width: fit-content; margin: 0 auto;"></div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const container = document.getElementById('DayCalculatorContainer');
      
      // Main HTML structure
      container.innerHTML = `
        <div class="day-calculator">
          <h3 class="calculator-title">Day Calculator</h3>
          
          <div class="input-section">
            <div class="date-row">
              <label>Start Date:</label>
              <div class="input-group">
                <div class="dropdown-group">
                  <select class="month-dropdown" id="start-month">
                    <option value="" selected disabled>Month</option>
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                    <option value="6">June</option>
                    <option value="7">July</option>
                    <option value="8">August</option>
                    <option value="9">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                  </select>
                  <select class="day-dropdown" id="start-day">
                    <option value="" selected disabled>Day</option>
                  </select>
                  <select class="year-dropdown" id="start-year">
                    <option value="" selected disabled>Year</option>
                  </select>
                </div>
                <button class="calendar-button" id="start-calendar-btn">
                  <span>üìÖ</span> Pick Date
                </button>
              </div>
            </div>
            
            <div class="date-row">
              <label>End Date:</label>
              <div class="input-group">
                <div class="dropdown-group">
                  <select class="month-dropdown" id="end-month">
                    <option value="" selected disabled>Month</option>
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                    <option value="6">June</option>
                    <option value="7">July</option>
                    <option value="8">August</option>
                    <option value="9">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                  </select>
                  <select class="day-dropdown" id="end-day">
                    <option value="" selected disabled>Day</option>
                  </select>
                  <select class="year-dropdown" id="end-year">
                    <option value="" selected disabled>Year</option>
                  </select>
                </div>
                <button class="calendar-button" id="end-calendar-btn">
                  <span>üìÖ</span> Pick Date
                </button>
              </div>
            </div>
          </div>
          
          <div class="button-group">
            <button class="calculate-btn">Calculate Days</button>
            <button class="reset-btn">Reset</button>
          </div>
          
          <div class="error-message" id="error-message" style="display:none;"></div>
          
          <div class="results-container" id="results-container" style="display:none;">
            <h4 class="result-title" id="result-title"></h4>
            <div class="result-units">
              <div class="result-unit" id="result-days"></div>
              <div class="result-unit" id="result-weeks"></div>
              <div class="result-unit" id="result-months"></div>
              <div class="result-unit" id="result-years"></div>
            </div>
          </div>
        </div>
        
        <!-- Calendar Modal -->
        <div class="calendar-modal" id="calendar-modal" style="display:none;">
          <div class="calendar-header">
            <button class="nav-button prev-month">‚ùÆ</button>
            <select id="calendar-month" class="calendar-dropdown"></select>
            <select id="calendar-year" class="calendar-dropdown"></select>
            <button class="nav-button next-month">‚ùØ</button>
          </div>

          <div class="calendar-grid">
            <div class="calendar-weekdays">
              <div>Sun</div><div>Mon</div><div>Tue</div><div>Wed</div><div>Thu</div><div>Fri</div><div>Sat</div>
            </div>
            <div class="calendar-days"></div>
          </div>
          
          <!-- Added Select/Cancel buttons -->
          <div class="calendar-footer">
            <button class="calendar-select-btn">Select</button>
            <button class="calendar-cancel-btn">Cancel</button>
          </div>
        </div>
      `;

      // Add CSS - All selectors now properly scoped to the container
      const style = document.createElement('style');
      style.textContent = `
        #DayCalculatorContainer .day-calculator {
          font-family: Arial, sans-serif;
          background: white;
          padding: 20px;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          width: fit-content;
          max-width: 100%;
        }
        
        #DayCalculatorContainer .calculator-title {
          color: #ad2a24;
          margin: 0 0 15px 0;
          font-size: 1.4rem;
          text-align: center;
        }
        
        #DayCalculatorContainer .input-section {
          margin-bottom: 15px;
        }
        
        #DayCalculatorContainer .date-row {
          display: flex;
          align-items: center;
          margin-bottom: 10px;
          gap: 10px;
          flex-wrap: wrap;
        }
        
        #DayCalculatorContainer .date-row label {
          font-weight: bold;
          min-width: 80px;
          color: #555;
          width: 100%;
        }
        
        #DayCalculatorContainer .input-group {
          display: flex;
          align-items: center;
          gap: 5px;
          flex-grow: 1;
          flex-wrap: wrap;
        }
        
        #DayCalculatorContainer .dropdown-group {
          display: flex;
          gap: 5px;
          flex-grow: 1;
          flex-wrap: wrap;
        }
        
        #DayCalculatorContainer select {
          padding: 8px;
          border: 1px solid #ddd;
          border-radius: 4px;
          background: white;
          color: #333;
          flex-grow: 1;
          min-width: 60px;
        }
        
        #DayCalculatorContainer .month-dropdown {
          min-width: 120px;
        }
        
        #DayCalculatorContainer .day-dropdown {
          min-width: 70px;
        }
        
        #DayCalculatorContainer .year-dropdown {
          min-width: 90px;
        }
        
        #DayCalculatorContainer .calendar-button {
          background-color: #ad2a24;
          color: #fff;
          padding: 10px 15px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-weight: 600;
          display: inline-flex;
          align-items: center;
          gap: 8px;
          transition: all 0.2s;
          height: 40px;
          flex: 0 0 auto;
        }
        
        #DayCalculatorContainer .calendar-button:hover {
          background-color: #c2332d;
        }
        
        #DayCalculatorContainer .button-group {
          display: flex;
          gap: 10px;
          margin: 20px 0;
          flex-wrap: wrap;
        }
        
        #DayCalculatorContainer .calculate-btn, 
        #DayCalculatorContainer .reset-btn {
          padding: 10px 15px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          flex: 1;
          min-width: 120px;
        }
        
        #DayCalculatorContainer .calculate-btn {
          background-color: #ad2a24;
          color: white;
        }
        
        #DayCalculatorContainer .reset-btn {
          background-color: #666;
          color: white;
        }
        
        #DayCalculatorContainer .error-message {
          color: #d8000c;
          background: #ffe6e6;
          padding: 10px;
          border-radius: 4px;
          margin-bottom: 15px;
        }
        
        #DayCalculatorContainer .results-container {
          background: #f9f9f9;
          padding: 15px;
          border-radius: 4px;
          border: 1px solid #eee;
        }
        
        #DayCalculatorContainer .result-title {
          color: #ad2a24;
          margin: 0 0 10px 0;
        }
        
        #DayCalculatorContainer .result-units {
          display: flex;
          gap: 10px;
          flex-wrap: wrap;
        }
        
        #DayCalculatorContainer .result-unit {
          background: #f0f0f0;
          padding: 8px 12px;
          border-radius: 4px;
          font-size: 0.9rem;
        }
        
        /* Calendar Modal Styles */
        #DayCalculatorContainer .calendar-modal {
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: white;
          padding: 15px;
          border-radius: 8px;
          box-shadow: 0 4px 20px rgba(0,0,0,0.2);
          z-index: 1000;
          width: 300px;
          max-width: 90%;
        }
        
        #DayCalculatorContainer .calendar-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 10px;
        }
        
        #DayCalculatorContainer .nav-button {
          background: none;
          border: none;
          font-size: 1.2rem;
          cursor: pointer;
          color: #ad2a24;
          padding: 0 10px;
        }
        
        #DayCalculatorContainer .calendar-weekdays {
          display: grid;
          grid-template-columns: repeat(7, 1fr);
          text-align: center;
          font-weight: bold;
          margin-bottom: 5px;
          color: #555;
        }
        
        #DayCalculatorContainer .calendar-days {
          display: grid;
          grid-template-columns: repeat(7, 1fr);
          gap: 5px;
        }
        
        #DayCalculatorContainer .calendar-day {
          padding: 8px;
          text-align: center;
          cursor: pointer;
          border-radius: 4px;
        }
        
        #DayCalculatorContainer .calendar-day:hover {
          background: #f0f0f0;
        }
        
        #DayCalculatorContainer .calendar-day.selected {
          background: #ad2a24;
          color: white;
        }
        
        #DayCalculatorContainer .calendar-day.other-month {
          color: #ccc;
        }
        
        /* Calendar Footer Styles */
        #DayCalculatorContainer .calendar-footer {
          display: flex;
          justify-content: flex-end;
          gap: 10px;
          margin-top: 15px;
        }
        
        #DayCalculatorContainer .calendar-select-btn,
        #DayCalculatorContainer .calendar-cancel-btn {
          padding: 8px 15px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-weight: 600;
        }
        
        #DayCalculatorContainer .calendar-select-btn {
          background-color: #ad2a24;
          color: white;
        }
        
        #DayCalculatorContainer .calendar-cancel-btn {
          background-color: #666;
          color: white;
        }
        
        /* Improved mobile responsiveness */
        @media (max-width: 480px) {
          #DayCalculatorContainer .date-row {
            flex-direction: column;
            align-items: flex-start;
          }
          
          #DayCalculatorContainer .date-row label {
            margin-bottom: 5px;
            width: auto;
          }
          
          #DayCalculatorContainer .dropdown-group {
            width: 100%;
          }
          
          #DayCalculatorContainer select {
            width: 100%;
            min-width: 0;
          }
          
          #DayCalculatorContainer .month-dropdown,
          #DayCalculatorContainer .day-dropdown,
          #DayCalculatorContainer .year-dropdown {
            width: 100%;
            min-width: 0;
          }
          
          #DayCalculatorContainer .calendar-button {
            width: 100%;
            justify-content: center;
          }
          
          #DayCalculatorContainer .button-group {
            flex-direction: column;
          }
          
          #DayCalculatorContainer .calculate-btn, 
          #DayCalculatorContainer .reset-btn {
            width: 100%;
          }
        }
      `;
      document.head.appendChild(style);

      // Initialize year dropdowns
      const currentYear = new Date().getFullYear();
      const dropdownCurrentYear = currentYear;

      const yearSelects = [
        document.getElementById('start-year'),
        document.getElementById('end-year')
      ];
      
      // Populate year dropdowns
      yearSelects.forEach(select => {
        for (let year = currentYear - 100; year <= currentYear + 10; year++) {
          const option = document.createElement('option');
          option.value = year;
          option.textContent = year;
          select.appendChild(option);
        }
      });

      // Initialize day dropdowns
      const daySelects = [
        document.getElementById('start-day'),
        document.getElementById('end-day')
      ];
      
      // Function to update days based on month/year
      function updateDays(monthSelect, yearSelect, daySelect) {
        const month = parseInt(monthSelect.value);
        const year = parseInt(yearSelect.value);
        
        // Clear day dropdown
        daySelect.innerHTML = '<option value="" selected disabled>Day</option>';
        
        if (isNaN(month)) {
          daySelect.innerHTML = '<option value="" selected disabled>Select month first</option>';
          return;
        }
        
        if (isNaN(year)) {
          daySelect.innerHTML = '<option value="" selected disabled>Select year first</option>';
          return;
        }
        
        const daysInMonth = new Date(year, month, 0).getDate();
        const selectedDay = daySelect.value;
        
        for (let day = 1; day <= daysInMonth; day++) {
          const option = document.createElement('option');
          option.value = day;
          option.textContent = day;
          daySelect.appendChild(option);
        }
        
        // Restore selected day if valid
        if (selectedDay && selectedDay <= daysInMonth) {
          daySelect.value = selectedDay;
        }
      }
      
      // Set up change listeners for month/year dropdowns
      const monthSelects = [
        document.getElementById('start-month'),
        document.getElementById('end-month')
      ];
      
      monthSelects.forEach((monthSelect, index) => {
        monthSelect.addEventListener('change', () => {
          updateDays(monthSelect, yearSelects[index], daySelects[index]);
        });
        
        yearSelects[index].addEventListener('change', () => {
          updateDays(monthSelect, yearSelects[index], daySelects[index]);
        });
      });

      // Calendar Picker Functionality
      let currentCalendar = null;
      let currentDisplayDate = new Date();
      let selectedStartDate = null;
      let selectedEndDate = null;
      let tempSelectedDate = null;
      
      const monthNames = ["January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"];

      const monthDropdown = document.getElementById('calendar-month');
      const yearDropdown = document.getElementById('calendar-year');

      // Populate month dropdown
      monthNames.forEach((month, index) => {
        const option = document.createElement('option');
        option.value = index;
        option.textContent = month;
        monthDropdown.appendChild(option);
      });

      // Populate year dropdown
      for (let year = currentYear - 100; year <= currentYear + 10; year++) {
        const option = document.createElement('option');
        option.value = year;
        option.textContent = year;
        yearDropdown.appendChild(option);
      }

      // Month/year dropdown change handlers
      monthDropdown.addEventListener('change', () => {
        const selectedMonth = parseInt(monthDropdown.value);
        const selectedYear = parseInt(yearDropdown.value);
        if (!isNaN(selectedMonth) && !isNaN(selectedYear)) {
          currentDisplayDate = new Date(selectedYear, selectedMonth, 1);
          renderCalendar(currentDisplayDate);
        }
      });

      yearDropdown.addEventListener('change', () => {
        const selectedMonth = parseInt(monthDropdown.value);
        const selectedYear = parseInt(yearDropdown.value);
        if (!isNaN(selectedMonth) && !isNaN(selectedYear)) {
          currentDisplayDate = new Date(selectedYear, selectedMonth, 1);
          renderCalendar(currentDisplayDate);
        }
      });

      function renderCalendar(date) {
        monthDropdown.value = date.getMonth();
        yearDropdown.value = date.getFullYear();
        
        const modal = document.getElementById('calendar-modal');
        const calendarDays = modal.querySelector('.calendar-days');
        
        // Get first day of month and total days
        const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay();
        const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
        
        // Get days from previous month
        const prevMonthDays = new Date(date.getFullYear(), date.getMonth(), 0).getDate();
        
        // Clear calendar
        calendarDays.innerHTML = '';
        
        // Add days from previous month
        for (let i = firstDay - 1; i >= 0; i--) {
          const dayElement = document.createElement('div');
          dayElement.textContent = prevMonthDays - i;
          dayElement.classList.add('calendar-day', 'other-month');
          dayElement.addEventListener('click', () => {
            const newDate = new Date(date.getFullYear(), date.getMonth() - 1, prevMonthDays - i);
            currentDisplayDate = newDate;
            renderCalendar(newDate);
          });
          calendarDays.appendChild(dayElement);
        }
        
        // Add days from current month
        for (let i = 1; i <= daysInMonth; i++) {
          const dayElement = document.createElement('div');
          dayElement.textContent = i;
          dayElement.classList.add('calendar-day');
          
          const currentDate = new Date(date.getFullYear(), date.getMonth(), i);
          
          // Highlight if this is the selected date
          if (tempSelectedDate && currentDate.toDateString() === tempSelectedDate.toDateString()) {
            dayElement.classList.add('selected');
          }
          
          dayElement.addEventListener('click', () => {
            // Remove previous selection
            const prevSelected = calendarDays.querySelector('.selected');
            if (prevSelected) prevSelected.classList.remove('selected');
            
            // Add new selection
            dayElement.classList.add('selected');
            tempSelectedDate = new Date(date.getFullYear(), date.getMonth(), i);
          });
          calendarDays.appendChild(dayElement);
        }
        
        // Add days from next month
        const daysToAdd = 42 - (firstDay + daysInMonth);
        for (let i = 1; i <= daysToAdd; i++) {
          const dayElement = document.createElement('div');
          dayElement.textContent = i;
          dayElement.classList.add('calendar-day', 'other-month');
          dayElement.addEventListener('click', () => {
            const newDate = new Date(date.getFullYear(), date.getMonth() + 1, i);
            currentDisplayDate = newDate;
            renderCalendar(newDate);
          });
          calendarDays.appendChild(dayElement);
        }
      }
      
      function setSelectedDate(date, target) {
        const monthSelect = document.getElementById(`${target}-month`);
        const daySelect = document.getElementById(`${target}-day`);
        const yearSelect = document.getElementById(`${target}-year`);
        
        monthSelect.value = date.getMonth() + 1;
        yearSelect.value = date.getFullYear();
        
        // Update days dropdown
        updateDays(monthSelect, yearSelect, daySelect);
        
        // Set day value after dropdown is populated
        setTimeout(() => {
          daySelect.value = date.getDate();
        }, 0);
      }
      
      // Set up calendar button events
      function setupCalendar(target) {
        currentCalendar = target;
        tempSelectedDate = target === 'start' ? selectedStartDate : selectedEndDate;
        const modal = document.getElementById('calendar-modal');
        modal.style.display = 'block';
        renderCalendar(currentDisplayDate);
        
        // Set up navigation buttons
        modal.querySelector('.prev-month').onclick = () => {
          currentDisplayDate = new Date(currentDisplayDate.getFullYear(), currentDisplayDate.getMonth() - 1, 1);
          renderCalendar(currentDisplayDate);
        };
        
        modal.querySelector('.next-month').onclick = () => {
          currentDisplayDate = new Date(currentDisplayDate.getFullYear(), currentDisplayDate.getMonth() + 1, 1);
          renderCalendar(currentDisplayDate);
        };
        
        // Set up select/cancel buttons
        const selectBtn = modal.querySelector('.calendar-select-btn');
        const cancelBtn = modal.querySelector('.calendar-cancel-btn');
        
        selectBtn.onclick = () => {
          if (tempSelectedDate) {
            if (currentCalendar === 'start') {
              selectedStartDate = tempSelectedDate;
            } else {
              selectedEndDate = tempSelectedDate;
            }
            setSelectedDate(tempSelectedDate, currentCalendar);
            modal.style.display = 'none';
          }
        };
        
        cancelBtn.onclick = () => {
          modal.style.display = 'none';
        };
      }
      
      document.getElementById('start-calendar-btn').addEventListener('click', () => {
        setupCalendar('start');
      });
      
      document.getElementById('end-calendar-btn').addEventListener('click', () => {
        setupCalendar('end');
      });
      
      // Close modal when clicking outside
      window.addEventListener('click', (event) => {
        const modal = document.getElementById('calendar-modal');
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      });

      // Calculate function
      function calculateDifference() {
        const startYear = document.getElementById('start-year').value;
        const startMonth = document.getElementById('start-month').value;
        const startDay = document.getElementById('start-day').value;
        
        const endYear = document.getElementById('end-year').value;
        const endMonth = document.getElementById('end-month').value;
        const endDay = document.getElementById('end-day').value;
        
        // Validate selections
        if (!startYear || !startMonth || !startDay) {
          showError("Please select a valid start date");
          return;
        }
        
        if (!endYear || !endMonth || !endDay) {
          showError("Please select a valid end date");
          return;
        }
        
        const startDate = new Date(
          parseInt(startYear),
          parseInt(startMonth) - 1,
          parseInt(startDay)
        );
        
        const endDate = new Date(
          parseInt(endYear),
          parseInt(endMonth) - 1,
          parseInt(endDay)
        );
        
        // Validate end date is after start date
        if (endDate < startDate) {
          showError("End date must be after start date");
          return;
        }
        
        const diffTime = Math.abs(endDate - startDate);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
        
        // Calculate other units
        const diffWeeks = Math.round(diffDays / 7 * 10) / 10;
        const diffMonths = Math.round(diffDays / 30.44 * 10) / 10;
        const diffYears = Math.round(diffDays / 365.25 * 10) / 10;
        
        // Format dates
        const startDateStr = startDate.toLocaleDateString('en-US', { 
          month: 'long', 
          day: 'numeric', 
          year: 'numeric' 
        });
        const endDateStr = endDate.toLocaleDateString('en-US', { 
          month: 'long', 
          day: 'numeric', 
          year: 'numeric' 
        });
        
        // Display results
        document.getElementById('results-container').style.display = 'block';
        
        document.getElementById('result-title').textContent = 
          `Between ${startDateStr} and ${endDateStr}`;
        
        document.getElementById('result-days').textContent = `${diffDays} day${diffDays !== 1 ? 's' : ''}`;
        document.getElementById('result-weeks').textContent = `${diffWeeks} week${diffWeeks !== 1 ? 's' : ''}`;
        document.getElementById('result-months').textContent = `${diffMonths} month${diffMonths !== 1 ? 's' : ''}`;
        document.getElementById('result-years').textContent = `${diffYears} year${diffYears !== 1 ? 's' : ''}`;
        
        // Hide error if previously shown
        hideError();
      }
      
      // Reset function
      function resetCalculator() {
        // Reset dropdowns
        const selects = document.querySelectorAll('#DayCalculatorContainer .day-calculator select');
        selects.forEach(select => {
          select.value = '';
          if (select.id.includes('day')) {
            select.innerHTML = '<option value="" selected disabled>Day</option>';
          }
        });
        
        // Reset selected dates
        selectedStartDate = null;
        selectedEndDate = null;
        currentDisplayDate = new Date();
        
        // Hide results and errors
        document.getElementById('results-container').style.display = 'none';
        document.getElementById('error-message').style.display = 'none';
      }
      
      // Show error message
      function showError(message) {
        const errorDiv = document.getElementById('error-message');
        errorDiv.textContent = message;
        errorDiv.style.display = 'block';
        document.getElementById('results-container').style.display = 'none';
      }
      
      // Hide error message
      function hideError() {
        document.getElementById('error-message').style.display = 'none';
      }
      
      // Set up button events with a slight delay to ensure elements exist
      setTimeout(() => {
        document.querySelector('#DayCalculatorContainer .calculate-btn').addEventListener('click', calculateDifference);
        document.querySelector('#DayCalculatorContainer .reset-btn').addEventListener('click', resetCalculator);
      }, 100);
    });
  </script>
</body>
</html>